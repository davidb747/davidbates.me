1. 중첩 클래스
- 내부 클래스(Inner Class)
    클래스 또는 메소드 안에 또 다른 클래스를 생성하는 것
    내부 클래스는 외부 클래스의 모든 멤버를 자신의 멤버처럼 사용
    static 내부 클래스를 제외한 내부 클래스는 항상 외부 클래스 객체를 통해서 생성

- 로컬 클래스(Local Class)
    메소드 안에서 정의된 클래스(메소드 안에서만 사용할 수 있음)
    외부 클래스의 모든 멤버에 접근이 가능(pricate 멤버도 접근 가능)

- 정적 중첩 클래스(Static Class)
    내부 클래스가 static으로 정의
    외부 클래스에 관계없이 객체를 생성할 수 있음

- 익명 클래스(Anonymous Class)
    클래스를 정의하지 않고 객체를 정의할 때 사용
    1회용 클래스이므로 재활용이 불가능
    * 클래스를 한번 사용하고 없어지면 좋을거 같은 객체를 만들때 사용하며 많이 사용된다.

2. 예외 처리(Exception)

오류(error)
자바 컴파일러에 의해 문법 오류를 발생

예외(exception)
문법이 맞게 작성되었다 하더라도 프로그램을 실행하면서 예상하지 못한 오류가 발생
프로그램 실행 중 비정상적으로 종료
예측할 수 있는 예외, 예측 못하는 예외

✔ 예외가 발생하는 원인
- 사용자가 잘못된 데이터를 입력하는 경우
- 개발자가 로직이나 계산을 잘못 작성한 경우
- 하드웨어나 네트워크가 제대로 동작하지 못하는 경우
- 악의적으로 잘못된 연산을 요구하거나 시스템을 공격

예외의 종류 - 예외 상황에 맞춰 문제를 처리하기 위해 다양한 예오처리가 있다.
- 컴파일시에 예외 발생
- 런타임시에 예외 발생

                            [Exception] // 모든 예외를 처리

     [IOExcerption]  [FileNotFoundException] ... [RuntimeException]

예외처리 코드

    try{
        실제 코드가 들어가는 곳으로 예외 상황이 발생할 가능성이 있는 코드
        ....
        예외 발생!
        ....  <------ 예외가 발생하면 이곳으로 오지 않음
        ....
    }catch(예외객체타입1 참조변수1){
        try 블록에서 예외 객체 타입1의 Exception이 발생하면 여기로 오게 됨
        해당 코드를 실행 후 에러없이 벗어남
        ......
    }catch(예외객체타입1 참조변수1){
        try 블록에서 예외 객체 타입1의 Exception이 발생하면 여기로 오게 됨
        해당 코드를 실행 후 에러없이 벗어남
        ......
    }
    ...
    finally{ // 무조건 실행하는 문장으로 필수는 아니다.
    try블록에서 Exception 발생과 관계없이 무조건 실행되는 코드(옵션)
    }


문제.
Scanner로 입력을 받아 해당 데이터가 숫자면 숫자를 출력, 문자면 -1을 출력하는 프로그램을 만들어보자
(단, 예외처리를 사용하여 작성)


✔ throw
강제로 예외를 발생시키고자 할 때 사용
현재 메소드의 예외를 처리한 후 상위 메소드에 예외 정보를 전달함

강제로 예외를 방생시키는 방법
    Exception 참조변수 = new Exception("예외가 발생하면 출력될 문자열")
    ...
    ...
    throw 참조변수; // 예외발생!

✔ throws
현재 메소드에서 자신을 호출한 상위 메소드로 예외를 발생시킴
사용하는 메소드를 호출한 상위 메소드에서 예외처리에 대한 책임을 맡김


3. 파일 다루기

File 클래스
파일 또는 디렉토리 다루는 클래스
입출력 관한 작업

    File 참조변수 = new File(파일 경로 또는 파일이름);

✔ 스트림(Stream)
- 자바는 파일이나 콘솔에 입출력을 직접 다루지 않고 스트림이라는 흐름을 통해 다룸
- 운영체제에 의해 생성되는 가상의 연결고리를 의미하고 중간 매개자 역할을 함


    Java 프로그램 <---------> OS(운영체제) <----------> 디스크(파일, 디렉토리)
                  스트림(흐름)                        모니터, 프린터, 네트워크...


✔ 절대경로
믈리적인 경로
예) C:\Java\Day9\Day9.txt

✔ 상대경로
현재 동작하고 있는 파일을 중심으로 상대적인 경로
예) Day9.txt, 디렉토리명/Day9.txt, ../Day9.txt

exist() : 파일에 실제 존재하는지 여부(boolean - true, false)
isDirectory() : 해당 경로가 디렉토리인지 여부
length() : 파일 데이터 길이를 변환(byte), 한글은 3byte, 영어/특수문자/공백 1byte
mkdir() : 디렉토리를 생성
creatNewFile() : 파일을 생성

FileInputStream 클래스
- java.io의 가장 기본이 되는 입력 클래스
- 입력 스트림 생성

read() : 스트림을 통해 byte단위로 데이터를 읽어옴

FileOutputStream 클래스
- java.io의 가장 기본이 되는 입력 클래스
- 츨력 스트림을 통해 byte단위로 데이터를 씀

FileReader 클래스
- FileInputStream과 유사
- 문자 스트림으로서 문자 단위의 바이트 변환 기능을 가지고 있음
- 바이트 단위가 아닌 문자단위로 입출력을 실행

FireWriter 클래스
- FileOutputStream과 유사
- 문자 스트림으로서 문자 단위의 바이트 변환 기능을 가지고 있음
- 바이트 단위가 아닌 문자단위로 입출력을 실행

PrintWriter 클래스
- 문자열을 출력하는 스트림 Writer 속성을 가진 클래스
- OutputStream의 자식 클래스이며 byte단위 출력 클래스인 PrintStream의 print메서드를
모두 구현하여 사용할 수 있음


과제 1.
"product.txt" 에서 데이터를 읽어 product 객체에 각각 데이터를 저장하고 ArrayList에 담아
출력하는 프로그램을 작성해보자.

1. 파일을 읽어드림
2. 스플릿하여 각 배열에 저장

-> product class 따로 만들어야 함 name, price, name -> arrayList 에 5개를 저장해서 -> tostring해서 표현

product.txt 내용
갤럭시노트,1200000,삼성
아이버드,130000,삼성
그램노트북,1000000,엘지
60인치TV,3000000,소니
맥북프로,1800000,애플

과제 2.
어제 과제에 예외처리를 적용하여 재작성해보자.






